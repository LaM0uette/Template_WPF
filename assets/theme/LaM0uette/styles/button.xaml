<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    
    <!-- Base -->
    <Style x:Key="ButtonBase" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource RgbM2}"/>
        <Setter Property="Foreground" Value="{StaticResource RgbM3}"/>
        <Setter Property="Height" Value="{StaticResource WgHeight}"/>
        <Setter Property="Cursor" Value="Hand"/>
        
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="#FF242424" Direction="320" ShadowDepth="3" BlurRadius="8" Opacity="0.2" />
            </Setter.Value>
        </Setter>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RgbM3}"/>
                <Setter Property="Foreground" Value="{StaticResource RgbM2}"/>
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RgbB1}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- /Base -->
    
    
    <!-- Default -->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        
    </Style>
        <!-- Round -->
    <Style x:Key="ButtonBaseRound" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="{StaticResource RscRound}"></Setter>
            </Style>
        </Style.Resources>
    </Style>
    <!-- /Default -->
    
    
    <!-- Texts -->
    <Style x:Key="ButtonTxt" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource RgbM1}"/>
        <Setter Property="Foreground" Value="{StaticResource RgbM2}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource RgbM2}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RgbM2}"/>
                <Setter Property="Foreground" Value="{StaticResource RgbM1}"/>
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RgbB1}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
        <!-- Round -->
    <Style x:Key="ButtonTxtRound" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonTxt}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="{StaticResource RscRound}"></Setter>
            </Style>
        </Style.Resources>
    </Style>
    
        <!-- Texts Inv -->
    <Style x:Key="ButtonTxtInv" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Foreground" Value="{StaticResource RgbM1}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonTxtInvBorder" 
                            Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource RgbM2}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RgbM1}"/>
                <Setter Property="Foreground" Value="{StaticResource RgbM2}"/>
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RgbB1}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
        <!-- Round -->
    <Style x:Key="ButtonTxtInvRound" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonTxtInv}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="{StaticResource RscRound}"></Setter>
            </Style>
        </Style.Resources>
    </Style>
    <!-- /Texts -->
    
    
    <!-- Dlg -->
        <!-- OK -->
    <Style x:Key="ButtonDlgOk" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonTxt}">
        <Setter Property="Foreground" Value="{StaticResource RgbOk1}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource RgbOk1}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RgbOk1}"/>
                <Setter Property="Foreground" Value="{StaticResource RgbM1}"/>
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RgbB1}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
        <!-- Round -->
    <Style x:Key="ButtonDlgOkRound" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonDlgOk}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="{StaticResource RscRound}"></Setter>
            </Style>
        </Style.Resources>
    </Style>
        <!-- OK Inv -->
    <Style x:Key="ButtonDlgOkInv" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource RgbOk1}"/>
        <Setter Property="Foreground" Value="{StaticResource RgbM1}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonTxtInvBorder" 
                            Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource RgbOk1}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RgbM1}"/>
                <Setter Property="Foreground" Value="{StaticResource RgbOk1}"/>
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RgbB1}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
        <!-- Round -->
    <Style x:Key="ButtonDlgOkInvRound" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonDlgOkInv}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="{StaticResource RscRound}"></Setter>
            </Style>
        </Style.Resources>
    </Style>
    
        <!-- OK Bis -->
    <Style x:Key="ButtonDlgOkBis" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonTxt}">
        <Setter Property="Foreground" Value="{StaticResource RgbOk2}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource RgbOk2}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RgbOk2}"/>
                <Setter Property="Foreground" Value="{StaticResource RgbM1}"/>
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RgbB1}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
        <!-- Round -->
    <Style x:Key="ButtonDlgOkBisRound" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonDlgOkBis}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="{StaticResource RscRound}"></Setter>
            </Style>
        </Style.Resources>
    </Style>
        <!-- OK Bis Inv -->
    <Style x:Key="ButtonDlgOkBisInv" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource RgbOk2}"/>
        <Setter Property="Foreground" Value="{StaticResource RgbM1}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonTxtInvBorder" 
                            Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource RgbOk2}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RgbM1}"/>
                <Setter Property="Foreground" Value="{StaticResource RgbOk2}"/>
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RgbB1}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
        <!-- Round -->
    <Style x:Key="ButtonDlgOkBisInvRound" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonDlgOkBisInv}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="{StaticResource RscRound}"></Setter>
            </Style>
        </Style.Resources>
    </Style>
    
        <!-- NOK -->
    <Style x:Key="ButtonDlgNok" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonTxt}">
        <Setter Property="Foreground" Value="{StaticResource RgbNok1}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource RgbNok1}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RgbNok1}"/>
                <Setter Property="Foreground" Value="{StaticResource RgbM1}"/>
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RgbB2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
        <!-- Round -->
    <Style x:Key="ButtonDlgNokRound" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonDlgNok}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="{StaticResource RscRound}"></Setter>
            </Style>
        </Style.Resources>
    </Style>
        <!-- NOK Inv -->
    <Style x:Key="ButtonDlgNokInv" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource RgbNok1}"/>
        <Setter Property="Foreground" Value="{StaticResource RgbM1}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonTxtInvBorder" 
                            Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource RgbNok1}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RgbM1}"/>
                <Setter Property="Foreground" Value="{StaticResource RgbNok1}"/>
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RgbB2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
        <!-- Round -->
    <Style x:Key="ButtonDlgNokInvRound" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonDlgNokInv}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="{StaticResource RscRound}"></Setter>
            </Style>
        </Style.Resources>
    </Style>
    
        <!-- NOK Bis -->
    <Style x:Key="ButtonDlgNokBis" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonTxt}">
        <Setter Property="Foreground" Value="{StaticResource RgbNok2}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource RgbNok2}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RgbNok2}"/>
                <Setter Property="Foreground" Value="{StaticResource RgbM1}"/>
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RgbB2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
        <!-- Round -->
    <Style x:Key="ButtonDlgNokBisRound" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonDlgNokBis}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="{StaticResource RscRound}"></Setter>
            </Style>
        </Style.Resources>
    </Style>
    <!-- NOK Inv -->
    <Style x:Key="ButtonDlgNokBisInv" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource RgbNok2}"/>
        <Setter Property="Foreground" Value="{StaticResource RgbM1}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonTxtInvBorder" 
                            Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{StaticResource RgbNok2}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RgbM1}"/>
                <Setter Property="Foreground" Value="{StaticResource RgbNok2}"/>
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RgbB2}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
        <!-- Round -->
    <Style x:Key="ButtonDlgNokBisInvRound" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonDlgNokBisInv}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="{StaticResource RscRound}"></Setter>
            </Style>
        </Style.Resources>
    </Style>
    <!-- /Dlg -->
    
    
</ResourceDictionary>

<!--
<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource M3}" 
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd"
                                            Duration="0:0:0.2"/>
                            <ColorAnimation To="{StaticResource M2}" 
                                            Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource M2}" 
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" 
                                            Duration="0:0:0.2"/>
                            <ColorAnimation To="{StaticResource M3}" 
                                            Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource RgbB1}"/>
            </Trigger>
        </Style.Triggers>
        
        
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Direction="320" ShadowDepth="3" BlurRadius="5" Opacity="0.5" />
            </Setter.Value>
        </Setter>
-->